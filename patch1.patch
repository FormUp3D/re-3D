diff --git a/Marlin/Marlin/Marlin_main.cpp b/Marlin/Marlin/Marlin_main.cpp
index e60b84d..5b73353 100644
--- a/Marlin/Marlin/Marlin_main.cpp
+++ b/Marlin/Marlin/Marlin_main.cpp
@@ -3040,6 +3040,8 @@ static void do_homing_move(const AxisEnum axis, const float distance, const floa
 
 static void homeaxis(const AxisEnum axis) {
 
+	int tmp_extruder= active_extruder;
+	active_extruder=0;
   #if IS_SCARA
     // Only Z homing (with probe) is permitted
     if (axis != Z_AXIS) { BUZZ(100, 880); return; }
@@ -3201,6 +3203,7 @@ static void homeaxis(const AxisEnum axis) {
       SERIAL_EOL();
     }
   #endif
+  active_extruder = tmp_extruder;
 } // homeaxis()
 
 #if ENABLED(MIXING_EXTRUDER)
@@ -10562,6 +10565,7 @@ inline void gcode_M502() {
       wait_for_filament_reload(beep_count);
     #if ENABLED(HOME_AFTER_FILAMENT_CHANGE)
       // Don't allow resume without homing first
+      //gcode_G28(false,true,true);
     //  HOMEAXIS(X);
     //  HOMEAXIS(Y);
     #endif
diff --git a/Marlin/Marlin/endstops.cpp b/Marlin/Marlin/endstops.cpp
index f51a11b..96c4c70 100644
--- a/Marlin/Marlin/endstops.cpp
+++ b/Marlin/Marlin/endstops.cpp
@@ -270,6 +270,10 @@ void Endstops::M119() {
   #if ENABLED(FILAMENT_RUNOUT_SENSOR)
     SERIAL_PROTOCOLPGM(MSG_FILAMENT_RUNOUT_SENSOR);
     SERIAL_PROTOCOLLN(((READ(FIL_RUNOUT_PIN)^FIL_RUNOUT_INVERTING) ? MSG_ENDSTOP_HIT : MSG_ENDSTOP_OPEN));
+    #if NUM_RUNOUT_SENSORS>1
+      SERIAL_PROTOCOLPGM(MSG_FILAMENT_RUNOUT_SENSOR2);
+      SERIAL_PROTOCOLLN(((READ(FIL_RUNOUT2_PIN)^FIL_RUNOUT_INVERTING) ? MSG_ENDSTOP_HIT : MSG_ENDSTOP_OPEN));
+    #endif
   #endif
 } // Endstops::M119
 
diff --git a/Marlin/Marlin/gigabot.h b/Marlin/Marlin/gigabot.h
index 568ef51..a932cc6 100644
--- a/Marlin/Marlin/gigabot.h
+++ b/Marlin/Marlin/gigabot.h
@@ -93,6 +93,11 @@
   #endif
 #endif
 
+#if SYSTEM_SECTION == SUBSECTION(EXTRUDER, 2)
+  #undef  EXTRUDE_MINTEMP
+  #define EXTRUDE_MINTEMP 120
+#endif
+  
 #if SYSTEM_SECTION == SUBSECTION(HOMING, 1)
   #undef  USE_XMIN_PLUG
   #undef  USE_YMIN_PLUG
@@ -126,6 +131,7 @@
 #endif
 
 #if SYSTEM_SECTION == SUBSECTION(HOMING, 2)
+  #undef Y_HOME_DIR
   #define Y_HOME_DIR 1
 #endif
 
@@ -180,7 +186,7 @@
   #define Y_BED_SIZE   610
   #define Z_MAX_POS    609
   
-  #undef FILAMENT_RUNOUT_SENSOR //Undefine then define again
+  #undef FILAMENT_RUNOUT_SENSOR 
 
   #define ADVANCED_PAUSE_FEATURE
   #define NOZZLE_PARK_FEATURE
@@ -222,10 +228,15 @@
   #undef  PREHEAT_2_TEMP_HOTEND
   #undef  PREHEAT_2_TEMP_BED
 
-  #define PREHEAT_1_TEMP_HOTEND 160
+  #define PREHEAT_1_TEMP_HOTEND 200
   #define PREHEAT_1_TEMP_BED     60
-  #define PREHEAT_2_TEMP_HOTEND 220
-  #define PREHEAT_2_TEMP_BED     95
+  #define PREHEAT_2_TEMP_HOTEND 250
+  #define PREHEAT_2_TEMP_BED    115
+  
+  
+  #if ENABLED(NOZZLE_PARK_FEATURE)
+	#define NOZZLE_PARK_POINT { (X_MIN_POS + 500), (Y_MAX_POS - 10), 20 }
+  #endif
 #endif
 
 #if SYSTEM_SECTION == SUBSECTION(LCD, 1)
@@ -238,6 +249,16 @@
   #define SPI_SPEED SPI_QUARTER_SPEED
   #define SD_CHECK_AND_RETRY
   #define VIKI2
+  
+  #if ENABLED(SDSUPPORT)
+	#define SDCARD_RATHERRECENTFIRST
+	//#define SDCARD_SORT_ALPHA
+    #if ENABLED(SDCARD_SORT_ALPHA)
+	   #define SDSORT_LIMIT       40
+	#endif
+  #endif //sdsupport
+  
+  #define LIN_ADVANCE
 #endif
 
 #define ULTRA_LCD  //general LCD support, also 16x2
@@ -247,6 +268,16 @@
       #define LCD_CONTRAST_MAX     75//255
       #define DEFAULT_LCD_CONTRAST 35//140
 
+#if SYSTEM_SECTION == SUBSECTION(SERIAL_BUF, 1)
+  #undef FILAMENT_CHANGE_UNLOAD_FEEDRATE
+  #undef ADVANCED_PAUSE_PURGE_FEEDRATE
+  #undef PAUSE_PARK_NOZZLE_TIMEOUT 
+
+	#define FILAMENT_CHANGE_UNLOAD_FEEDRATE     15  // (mm/s) Unload filament feedrate. This can be pretty fast.
+	#define ADVANCED_PAUSE_PURGE_FEEDRATE        1.5  // (mm/s) Extrude feedrate (after loading). Should be slower than load feedrate.
+	#define PAUSE_PARK_NOZZLE_TIMEOUT           180  // (seconds) Time limit before the nozzle is turned off for safety.
+#endif
+
 #if SYSTEM_SECTION == SUBSECTION(LCD, 2)
   #if ENABLED(ULTIPANEL)
  //   #undef  MANUAL_FEEDRATE
@@ -314,6 +345,15 @@
   #define AD8495_FORMULA (5.0 * 100.0) / 1024.0 / (OVERSAMPLENR) * (TEMP_SENSOR_AD8495_GAIN) + TEMP_SENSOR_AD8495_OFFSET
 #endif
 
+#if SYSTEM_SECTION == SUBSECTION(EXTRUDER, 4)
+  #undef  INVERT_E0_DIR 
+  #undef  INVERT_E1_DIR
+  
+  #define INVERT_E0_DIR true
+  #define INVERT_E1_DIR false
+#endif
+  
+
 #if SYSTEM_SECTION == SUBSECTION(EXTRUDER, 5)
   #undef  E0_AUTO_FAN_PIN 
   #undef  E1_AUTO_FAN_PIN 
@@ -321,6 +361,8 @@
   #define E1_AUTO_FAN_PIN 16
 #endif
 
+#define ENDSTOPS_ALWAYS_ON_DEFAULT
+
 #if SYSTEM_SECTION == SUBSECTION(EXTRAS, 3)
   #undef  Y_DUAL_STEPPER_DRIVERS
   #undef  Z_DUAL_STEPPER_DRIVERS
@@ -386,7 +428,8 @@
 
 
   #define X_MAX_PIN         -1
-  #define Y_MAX_PIN         63//14
+  #define Y_MAX_PIN         15
+  #define Y_MIN_PIN         14
 
   #undef  BEEPER_PIN
   #define BEEPER_PIN        33         
diff --git a/Marlin/Marlin/language.h b/Marlin/Marlin/language.h
index f16c724..1eebb66 100644
--- a/Marlin/Marlin/language.h
+++ b/Marlin/Marlin/language.h
@@ -166,6 +166,7 @@
 #define MSG_SKEW_MIN                        "min_skew_factor: "
 #define MSG_SKEW_MAX                        "max_skew_factor: "
 #define MSG_FILAMENT_RUNOUT_SENSOR          "filament: "
+#define MSG_FILAMENT_RUNOUT_SENSOR2         "filament2: "
 #define MSG_ERR_MATERIAL_INDEX              "M145 S<index> out of range (0-1)"
 #define MSG_ERR_M355_NONE                   "No case light"
 #define MSG_ERR_M421_PARAMETERS             "M421 incorrect parameter usage"
diff --git a/Marlin/Marlin/language_en.h b/Marlin/Marlin/language_en.h
index 99c007f..888a7fb 100644
--- a/Marlin/Marlin/language_en.h
+++ b/Marlin/Marlin/language_en.h
@@ -74,7 +74,7 @@
   #define MSG_PROGRESS_BAR_TEST               _UxGT("Progress Bar Test")
 #endif
 #ifndef MSG_AUTO_HOME
-  #define MSG_AUTO_HOME                       _UxGT("Auto home")
+  #define MSG_AUTO_HOME                       _UxGT("Home All")
 #endif
 #ifndef MSG_AUTO_HOME_X
   #define MSG_AUTO_HOME_X                     _UxGT("Home X")
@@ -82,6 +82,9 @@
 #ifndef MSG_AUTO_HOME_Y
   #define MSG_AUTO_HOME_Y                     _UxGT("Home Y")
 #endif
+#ifndef MSG_AUTO_HOME_XY
+  #define MSG_AUTO_HOME_XY                     _UxGT("Home XY")
+#endif
 #ifndef MSG_AUTO_HOME_Z
   #define MSG_AUTO_HOME_Z                     _UxGT("Home Z")
 #endif
diff --git a/Marlin/Marlin/ultralcd.cpp b/Marlin/Marlin/ultralcd.cpp
index 2e699a0..6ba297b 100644
--- a/Marlin/Marlin/ultralcd.cpp
+++ b/Marlin/Marlin/ultralcd.cpp
@@ -2676,23 +2676,52 @@ void lcd_quick_feedback(const bool clear_buttons) {
     //
     MENU_BACK(MSG_MAIN);
 
+    //
+    // Preheat for Material 1 and 2
+    //
+    #if HAS_TEMP_HOTEND	
+      #if TEMP_SENSOR_1 != 0 || TEMP_SENSOR_2 != 0 || TEMP_SENSOR_3 != 0 || TEMP_SENSOR_4 != 0 || HAS_HEATED_BED
+        MENU_ITEM(submenu, MSG_PREHEAT_1, lcd_preheat_m1_menu);
+        MENU_ITEM(submenu, MSG_PREHEAT_2, lcd_preheat_m2_menu);
+      #else
+        MENU_ITEM(function, MSG_PREHEAT_1, lcd_preheat_m1_e0_only);
+        MENU_ITEM(function, MSG_PREHEAT_2, lcd_preheat_m2_e0_only);
+      #endif
+    #endif // HAS_TEMP_HOTEND	
+    //
+    // Change filament
+    //
+    #if ENABLED(ADVANCED_PAUSE_FEATURE)
+      if (!IS_SD_FILE_OPEN) {
+        #if E_STEPPERS == 1 && !ENABLED(FILAMENT_LOAD_UNLOAD_GCODES)
+          if (thermalManager.targetHotEnoughToExtrude(active_extruder))
+            MENU_ITEM(gcode, MSG_FILAMENTCHANGE, PSTR("M600 B0"));
+          else
+            MENU_ITEM(submenu, MSG_FILAMENTCHANGE, lcd_temp_menu_e0_filament_change);
+        #else
+          MENU_ITEM(submenu, MSG_FILAMENTCHANGE, lcd_change_filament_menu);
+        #endif
+      }
+    #endif // ADVANCED_PAUSE_FEATURE
+	
     //
     // Move Axis
     //
     #if ENABLED(DELTA)
       if (axis_homed[X_AXIS] && axis_homed[Y_AXIS] && axis_homed[Z_AXIS])
     #endif
-        MENU_ITEM(submenu, MSG_MOVE_AXIS, lcd_move_menu);
+    MENU_ITEM(submenu, MSG_MOVE_AXIS, lcd_move_menu);
 
     //
     // Auto Home
     //
-    MENU_ITEM(gcode, MSG_AUTO_HOME, PSTR("G28"));
     #if ENABLED(INDIVIDUAL_AXIS_HOMING_MENU)
-      MENU_ITEM(gcode, MSG_AUTO_HOME_X, PSTR("G28 X"));
-      MENU_ITEM(gcode, MSG_AUTO_HOME_Y, PSTR("G28 Y"));
+      //MENU_ITEM(gcode, MSG_AUTO_HOME_X, PSTR("G28 X"));
+      //MENU_ITEM(gcode, MSG_AUTO_HOME_Y, PSTR("G28 Y"));
+	  MENU_ITEM(gcode, MSG_AUTO_HOME_XY, PSTR("G28 X Y"));
       MENU_ITEM(gcode, MSG_AUTO_HOME_Z, PSTR("G28 Z"));
     #endif
+	MENU_ITEM(gcode, MSG_AUTO_HOME, PSTR("G28"));
 
     //
     // Level Bed
@@ -2755,21 +2784,6 @@ void lcd_quick_feedback(const bool clear_buttons) {
     //
     MENU_ITEM(gcode, MSG_DISABLE_STEPPERS, PSTR("M84"));
 
-    //
-    // Change filament
-    //
-    #if ENABLED(ADVANCED_PAUSE_FEATURE)
-      if (!IS_SD_FILE_OPEN) {
-        #if E_STEPPERS == 1 && !ENABLED(FILAMENT_LOAD_UNLOAD_GCODES)
-          if (thermalManager.targetHotEnoughToExtrude(active_extruder))
-            MENU_ITEM(gcode, MSG_FILAMENTCHANGE, PSTR("M600 B0"));
-          else
-            MENU_ITEM(submenu, MSG_FILAMENTCHANGE, lcd_temp_menu_e0_filament_change);
-        #else
-          MENU_ITEM(submenu, MSG_FILAMENTCHANGE, lcd_change_filament_menu);
-        #endif
-      }
-    #endif // ADVANCED_PAUSE_FEATURE
 
     #if HAS_TEMP_HOTEND
 
@@ -2783,16 +2797,6 @@ void lcd_quick_feedback(const bool clear_buttons) {
       #endif
       if (has_heat) MENU_ITEM(function, MSG_COOLDOWN, lcd_cooldown);
 
-      //
-      // Preheat for Material 1 and 2
-      //
-      #if TEMP_SENSOR_1 != 0 || TEMP_SENSOR_2 != 0 || TEMP_SENSOR_3 != 0 || TEMP_SENSOR_4 != 0 || HAS_HEATED_BED
-        MENU_ITEM(submenu, MSG_PREHEAT_1, lcd_preheat_m1_menu);
-        MENU_ITEM(submenu, MSG_PREHEAT_2, lcd_preheat_m2_menu);
-      #else
-        MENU_ITEM(function, MSG_PREHEAT_1, lcd_preheat_m1_e0_only);
-        MENU_ITEM(function, MSG_PREHEAT_2, lcd_preheat_m2_e0_only);
-      #endif
 
     #endif // HAS_TEMP_HOTEND
 
@@ -3291,8 +3295,8 @@ void lcd_quick_feedback(const bool clear_buttons) {
     #endif
 
     //MENU_ITEM(submenu, MSG_MOVE_E, lcd_move_get_e_amount);
+    MENU_ITEM(submenu, MSG_MOVE_E MSG_MOVE_E1, lcd_move_get_e0_amount);
     #if E_MANUAL > 1
-      MENU_ITEM(submenu, MSG_MOVE_E MSG_MOVE_E1, lcd_move_get_e0_amount);
       MENU_ITEM(submenu, MSG_MOVE_E MSG_MOVE_E2, lcd_move_get_e1_amount);
       #if E_MANUAL > 2
         MENU_ITEM(submenu, MSG_MOVE_E MSG_MOVE_E3, lcd_move_get_e2_amount);
